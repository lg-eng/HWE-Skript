```{python}
#| code-fold: true
##| echo: false
from sympy import *
from sympy.abc import s
from sympy.physics.control.lti import TransferFunction, Series
from sympy.physics.control.control_plots import * #impulse_response_plot, step_response_plot, step_response_numerical_data, bode_plot, pole_zero_plot, step_response_numerical_data

```

# Oszillator {#sec-Oszillator}  
{{< include ../../../../Common/QuartoBookHelpers/QuartoBookHelpers.qmd >}}



Oszillatoren werden für folgende Anwendungen benötigt:  

* Taktgeber für digitale Schaltungen  
* Erzeugung von Trägersignalen für Drahtlose Kommunikation  
* Frequenzgeneratoren  
* Taktsignale für die Zeitmessung  
* Erzeugung von Sinuswellen für die Audiotechnik  

Und viele weitere Anwendungen. Oszillatorschaltungen sind damit grundlegende Schaltungen der Elektronik.  

## Grundlagen
**Schwingkreis** Ein Schwingkreis ist ein physikalisches System, das eine periodische Schwingung erzeugt. Ein Schwingkreis benötigt mindestens zwei Energiespeicher, um schwingfähig zu sein. Die Energiespeicher können Kondensatoren oder Spulen sein aber auch ein mechanisches System wie ein Pendel bestehend aus einer Feder und einem Gewicht.

**Oszillator** Ein Oszillator ist eine elektronische Schaltung, die aus einem Schwingkreis und einer Verstärkerschaltung besteht und den Zweck hat eine periodische Spannung zu erzeugen.

### Oszillatorschaltungen
Ein System ist schwingfähig, wenn es mindestens zwei Energiespeicher enthält. Zum Beispiel zwei Kondensatoren oder einen Kondensator und eine Spule. 

Es gibt verschiedene Arten von Oszillatorschaltungen, die auf unterschiedlichen Prinzipien basieren. Die häufigsten Typen sind:  
* LC-Oszillatoren  
* RC-Oszillatoren  
* Kristalloszillatoren  
* Relaxationsoszillatoren  
* MEMS-Oszillatoren  
* Phasenverschobene Oszillatoren  

Jeder dieser Oszillatoren hat seine eigenen Vor- und Nachteile und wird für spezifische Anwendungen eingesetzt. In diesem Kapitel werden wir uns auf die RC-Oszillatoren konzentrieren, die auf einem Schwingkreis basieren, der aus Widerständen und Kondensatoren besteht.  
Es soll ein Wien-Robinson-Oszillator erarbeitet werden. 
 

Weitere Links zum Thema [Altium Designer - Oscillators](https://resources.altium.com/p/everything-you-need-know-about-oscillators)

### Blockschaltbild eines Oszillators
Als Blockschaltbild lässt sich ein Oszillator aus zwei Teilen darstellen. Einem Frequenzbestimmendem System, dem Schwingkreis, und einem Verstärker.  

![Blockschaltbild eines Oszillator ](Oszillator/OszillatorBlockschaltbild.png){#fig-OscBlockschaltbildOszillator}  
  

<!-- ### Die Übertragungsfunktion eines Oszillators {#sec-OscÜbertragungsfunktion} -->
Jeder der in @fig-OscBlockschaltbildOszillator gezeigten Blöcke lässt sich mathematisch beschreiben. Auch das gesamte System lässt sich mathematisch beschreiben.  
Mathematisch kann ein Schwingkreis durch eine Differentialgleichung beschrieben werden. Besser eignet sich die Beschreibung durch eine Übertragungsfunktion im Frequenzbereich, die die Beziehung zwischen Eingang und Ausgang des Schwingkreises beschreibt. Die Theorie der Übertragungsfunktionen wird unter anderem in der Regelungstechnik verwendet. Es unterscheidet sich lediglich die [Nomenklatur](https://de.wikipedia.org/wiki/Nomenklatur) und die Anwendung, die Mathematik ist die gleiche. Weiters ist die Zweitortheorie sehr eng mit der Theorie der Übertragungsfunktionen verwandt. Wer hier die genauen Zusammenhänge verstehen möchte muss sich mit der [Laplace-Transformation](https://de.wikipedia.org/wiki/Laplace-Transformation) auseinandersetzen.  
Grafisch lässt sich die Übertragungsfunktion mit dem Bode-Diagramm gut Darstellen.

Hier wird die Übertragungsfunktion dazu benutzt die korrekten Bauteilwerte für einen Wien-Robinson-Oszillator zu berechnen.

<!---
Mathematisch ist ein schwingfähiges System an der Differentialgleichung zweiter Ordnung, oder höher, zu erkennen. In der Übertragungsfunktion muss das $s^2$ vorkommen.  
Weiters darf das System nicht gedämpft sein um das Abklingen der Schwingung zu verhindern. Die Dämpfung wird durch den Dämpfungsfaktor $D$ beschrieben. Die Frequenz des Schwingkreises wird durch die Eigenfrequenz $\omega_0$ beschrieben. $K$ ist der Verstärkungsfaktor des Schwingkreises. $K$ darf nicht zu groß sein um ein aufschwingen des Systems zu verhindern.  
In Formeln und Zahlen sehen diese Anforderungen wie folgt aus. Zunächst werden die Übertragungsfunktionen der einzelnen Blöcke betrachtet und im anschluss die Übertragungsfunktion des gesamten Systems.
-->

## Dimensionierung eines Wien-Robinson-Oszillator
Für dieses Beispiel wird der Wien-Robinson-Oszillator ausgewählt. Die Schaltung ist in [@boehmer17, chap. 13.2] zu finden.  Schematisch ist die Schaltung als Blockschaltbild in @fig-OscBlockschaltbildOszillator dargestellt. Die zwei Blöcke können getrennt betrachtet werden. Der Schwingkreis und der Verstärker.

### Übertragungsfunktion des Schwingkreises $H_1(\omega)$ {#sec-OscSchwingkreis}
Übertragungsfunktionen werden im Frequenzbereich betrachtet. das bedeutet, dass unsere Gleichungen nicht von der Zeit abhängen sondern von der Frequenz. 
<!-- Statt dem bekannten $j\omega$, der Komplexen Kreisfrequenz, wird die Laplace-Variable $s$ verwendet. Mehr Informationen dazu finden sich unter @sec-OscÜbertragungsfunktion.  -->
Beim Wien-Robinson-Oszillator wird eine Schaltung aus zwei Widerständen und einem Kondensator verwendet, @fig-RCSchwingkreis.

![RC Schwingkreis](Oszillator/RCSchwingkreis.png){#fig-RCSchwingkreis  width=10cm}  

Die Übertragungsfunktion lässt sich nun auf zwei Arten darstellen. Entweder mathematisch mittels der Komplexen Wechselstromrechnung oder mittels Simulation.

#### Mathematische Berechnung {#sec-OscMathBerechnung}
Die Übertragungsfunktion lässt sich mittels Spannungsteileregel anschreiben.

```{python}
#| code-fold: true
##| echo: false

Rw1 = MySymbol('Rw1',real=True,positive=True)
Rw2 = MySymbol('Rw2',real=True,positive=True)
Cw1 = MySymbol('Cw1',real=True,positive=True)
Cw2 = MySymbol('Cw2',real=True,positive=True)
Uin = MySymbol('U_{in}',real=True,positive=True)
Uout = MySymbol('U_{out}',real=True,positive=True)
w = MySymbol('w',real=True,positive=True)
Zin = MySymbol('Z_{in}')
Zout = MySymbol('Z_{out}')

Zout = 1/(1/Rw2+I*w*Cw2)
Zin = Zout + Rw1 + 1/(I*w*Cw1)

SpgT_eq = Eq(Uout/Uin, Zout/(Zin))  
QBookHelpers.print_equation(SpgT_eq)

```

Werden die zwei Widerstände und die zwei Kondensatoren als gleich angenommen, also $Rw1=Rw2=R$ und $Cw1=Cw2=C$ ergibt sich folgende Vereinfachung.

```{python}
#| code-fold: true
#| echo: false

R = MySymbol('R',real=True,positive=True,value=1*10**3,unit=u.ohm)#3
C = MySymbol('C',real=True,positive=True,value=1*10**-7,unit=u.F) #-7

SpgT_eq = simplify(SpgT_eq.subs({Rw1:Rw2,Rw2:R,Cw1:Cw2,Cw2:C}))
QBookHelpers.print_equation(SpgT_eq) #Would be way bette if the I was in the denominator, don't know how to do that.

```

Bei der Schwingfrequenz des Oszillator handelt es sich um die Eigenfrequenz des Schwingkreises. Bei der Schwingfrequenz ist der Imaginärteil Null. Das lässt sich benutzen um die Eigenfrequenz zu berechnen. Ist der Zähler rein real, erfordert ein erweitern der obigen Gleichung mit $i/i$, kann nur der Imaginärteil des Nenners betrachtet werden.

```{python}
#| code-fold: true
#| echo: false

imNenner = MySymbol('im(Nenner)',real=True)
w0 = MySymbol('w_0',real=True,positive=True,unit=u.rad/u.s)

#Using the denominator of the Transferfunction, need multiply by I to get correct form
n,d=fraction(SpgT_eq.rhs)

eq_imNenner = Eq(imNenner,im(simplify(d*I)))
QBookHelpers.print_equation(eq_imNenner)

```

Wird die Gleichung nach $\omega$ aufgelöst ergibt sich die Gleichung für die Eigenfrequenz $\omega_0$ des Schwingkreises.

```{python}
#| code-fold: true
#| echo: false

w0_eq = Eq(w0,solve(im(d*I),w)[0])
QBookHelpers.print_equation(w0_eq)

```
Mit den Zahlenwerten für die Bauteile ergibt sich folgender Wert für die Eigenfrequenz des Schwingkreises.
```{python}
#| code-fold: true
#| echo: false

w0.value = QBookHelpers.replace_num_value(w0_eq).rhs
QBookHelpers.print_values2([R,C,w0])

f0 = MySymbol('f_0',real=True,positive=True,unit=u.Hz)
f0_eq = Eq(f0,w0/(2*pi))
QBookHelpers.print_equation(f0_eq)

f0.value = QBookHelpers.replace_num_value(f0_eq).rhs
QBookHelpers.print_values([f0])


#Using the imaginary part of the entire Transferfunction, hard to do by hand
#imSpgT = MySymbol('im(SpgT)',real=True)
#imSpgT_eq = Eq(imSpgT,im(SpgT_eq.rhs))
#QBookHelpers.print_equation(imSpgT_eq)
#display(solve(im(SpgT_eq.rhs),w)) 


```

Wird $i \omega$ mit $s$ ersetzt ergibt sich die Übertragungsfunktion des Schwingkreises in Laplace-Form. Damit kann die Übertragungsfunktion des gesamten Systems berechnet werden und der Bode-Plot erstellt werden.

```{python}
#| code-fold: true
#| echo: false

#Transferfunction
Zout = 1/(1/Rw2+s*Cw2)
Zin = Zout + Rw1 + 1/(s*Cw1)

TFSpgT = (Zout/(Zin)).subs({Rw1:Rw2,Rw2:R,Cw1:Cw2,Cw2:C})
n,d = fraction(TFSpgT)

H1 = MySymbol('H_1')
H1_eq = Eq(H1,simplify(TransferFunction(n,d,s)).expand())
QBookHelpers.print_equation(H1_eq)


#Bodeplot

H1_eq_vals = QBookHelpers.replace_num_value(simplify(H1_eq))
```

:::{ .content-hidden unless-format="html"}
:::{#fig-ACAnalysis}
```{python}
#| code-fold: true
#| echo: false

bode_plot(H1_eq_vals.rhs,initial_exp=2, final_exp=6,phase_unit='deg',freq_unit='rad/sec')  

```
Simulation des Schwingkreises
:::
:::

Im Bodediagramm ist die Eigenfrequenz am Punkt der größten Verstärkung zu sehen. Da bei $\omega = \omega_0$ gilt, dass der Imaginärteil Null ist muss bei der Eigenfrequenz auch die Phasenverschiebung Null sein. Damit ist aus dem Bodediagramm die Eigenfrequenz abzulesen. Es ist zu erkennen, dass die Eigenfrequenz des Schwingkreises beim berechneten Wert liegt.

#### Simulation
Mittels *AC-Analysis* kann die Übertragungsfunktion des Schwingkreises simuliert werden. Die Simulationseinstellungen richten sich nach der erwarteten Frequenz des Schwingkreises. Die Simulationseinstellungen für oben gewählte Werte 

```default
.PLOT AC {MAG(v(uout)/v(uin))} =PLOT(1) =AXIS(1)
.PLOT AC {PHASE(v(uout)/v(uin))} =PLOT(1) =AXIS(2)

*Selected Circuit Analyses:
.AC DEC 10 10 10meg
```
![Bodediagramm des Schwingkreises](Oszillator/ACAnalysis.png){#fig-ACBodeRCSchwingkreis}


| Wave Name             | X       | Y         |
| --------------------- | ------- | --------- |
| MAG(v(uout)/v(uin))   | 1,5816 kHz | 333,30 m   |
| PHASE(v(uout)/v(uin)) | 1,5915 kHz | \-13,239 f° |
: Simulations Ergebnisse für den Schwingkreis an der Eigenfrequenz $\omega_0$. {#tbl-OscACAnalysis}

Um die Ergebnisse vergleichen zu können muss von der Frequenz auf die Kreisfrequenz umgerechnet werden. 

```{python}
#| code-fold: true
#| echo: false

w0_sim = MySymbol('w_0sim',real=True,positive=True,unit=u.rad/u.s)
f0_sim = MySymbol('f_0sim',real=True,positive=True,unit=u.Hz,value=1.5915*10**3)

eq_w0_sim = Eq(w0_sim,f0_sim*2*pi)
QBookHelpers.print_equation(eq_w0_sim)
w0_sim.value = QBookHelpers.replace_num_value(eq_w0_sim).rhs
QBookHelpers.print_values2([f0_sim,w0_sim])

```

Das Simulationsergebnis stimmt mit dem berechneten Wert aus @sec-OscMathBerechnung überein.

### Übertragungsfunktion des Oszillators {#sec-OscRückkopplung}
Um den Oszillator dauerhaft in Schwingung zu halten muss ein Teil des Ausgangssignals an den Eingang zurück gekoppelt werden, siehe @fig-OscBlockschaltbildOszillator.  
Da das Signal am Ausgang des Schwingkreises eine kleinere Amplitude hat als das Signal am Eingang, wie im Bodediagramm @fig-ACAnalysis ersichtlich ist, muss diese Dämpfung durch einen Verstärker, $H_2$, ausgeglichen werden.

#### Übertragungsfunktion des Verstärkers $H_2(s)$
Die Übertragungsfunktion eines idealen Verstärkers ist eine Konstante. Eine reale OPV Verstärkerschaltung wird am besten mit einem PT1 oder PT2 Glied angenähert. ist die zu verstärkende Frequenz sehr klein im Verhältnis zu den Knickfrequenzen der Verstärkerschaltung ist aber das einfache Modelle einer Konstanten ausreichend. Für den hier gezeigten Fall trifft dies zu.

```{python}
#| code-fold: true
#| echo: false

T_OPV = MySymbol('T_{OPV}',real=True,positive=True,value=(1/(332.18*10**3*2*pi)))
k_OPV = MySymbol('k_{OPV}',real=True,positive=True,value=3,description='Verstärkung des Verstärkers')
D_OPV = MySymbol('D_{OPV}',real=True,positive=True,value=2)

H2 = MySymbol('H_2')
H2_eq = Eq(H2,k_OPV) # Als idealer Verstärker
QBookHelpers.print_equation(H2_eq)

H2_TFeq = Eq(H2,TransferFunction(H2_eq.rhs,1,s)) # Als idealer Verstärker
#H2_eq = Eq(H2,TransferFunction(k_OPV,1+T_OPV*s,s)) #OPV mit PT1 Glied angenähert
#H2_eq = Eq(H2,TransferFunction(k_OPV,1+ 2*D_OPV*T_OPV*s + T_OPV**2*s**2,s)) #OPV mit PT2 Glied angenähert

H2_TFeq_vals = QBookHelpers.replace_num_value(H2_TFeq)
H2_eq_vals = QBookHelpers.replace_num_value(H2_eq)

QBookHelpers.print_description([k_OPV])

```

#### Open Loop Betrachtung
Für die Beurteilung ob die Verstärkung des Verstärkers richtig gewählt wurde, kann das System ohne Rückkopplung betrachtet werden. Auch kann die Stabilität mittels Pol-Nullstellen Diagramm beurteilt werden.  
Die Übertragungsfunktion des offenen Systems, also ohne Rückkopplung, auch Open-Loop genannt, ist das Produkt der Übertragungsfunktionen des Schwingkreises und des Verstärkers.

![Open Loop](Oszillator/OszillatorBlockschaltbildOpenLoop.png){#fig-OscOpenLoop  width=10cm}  

```{python}
#| code-fold: true
#| echo: false

H = MySymbol('H')

H_eq1 = Eq(H,H1*H2)
QBookHelpers.print_equation(H_eq1)

H_eq2 = Eq(H,simplify(H1_eq.rhs*H2_TFeq.rhs).expand())
QBookHelpers.print_equation(H_eq2)


```


#### Stabiles System {#sec-OscStableSignal}
Die Verstärkung des gesamten Systems muss so gewählt werden, dass das System stabil ist. Das bedeutet, dass die Schwingung nicht abklingt und auch nicht aufschwingt. Die gesamtverstärkung von Schwingkreis und Verstärker muss an der Eigenfrequenz 1 sein. Das bedeutet, dass die Verstärkung des Verstärkers gleich der Dämpfung des Schwingkreises sein muss.  
Wie in Abschnitt @sec-OscGedämpftesSignal und @sec-OscInstabilesSystem gezeigt wurde, muss die Verstärkung "richtig" gewählt werden um sowohl ein Aufschwingen als auch ein Abklingen zu verhindern.  
Das Ausgangssignal des Schwingkreises ist um den Faktor 3 gedämpft. Dies lässt sich aus dem Bodediagramm @fig-ACBodeRCSchwingkreis oder aus der Formel ablesen. Damit ergibt sich die notwendige Verstärkung. 

:::{ .content-hidden unless-format="html"}
:::{#fig-OscBodeOpenLoop}
```{python}
#| code-fold: true
#| echo: false

k_OPV.value = 3
QBookHelpers.print_values([k_OPV])

#Insert Values
H_eq2_vals = QBookHelpers.replace_num_value(H_eq2)

#QBookHelpers.print_equation(H2_eq_vals)
#QBookHelpers.print_equation(H_eq2_vals)

#bode_plot(H_eq2_vals.rhs,initial_exp=2, final_exp=6,phase_unit='deg',freq_unit='rad/sec')  

sciTF = QBookHelpers.symTF_to_sciTF(H_eq2_vals.rhs)
w = np.logspace(2,6,1000)
w, mag, phase = signal.bode(sciTF,w=w)
QBookHelpers.plotly_plot3(w,[mag,phase])

```
Bodediagramm des Schwingkreises mit Verstärker in Open Loop Konfiguration
:::
:::

Es ist zu erkennen, dass mit einem Verstärker as Verhältnis von Eingangssignal zu Ausgangssignal bei der Eigenfrequenz tatsächlich 1 ist, $0 \ \mathrm{dB}$. Der Verstärker wurde richtig dimensioniert.  

#### Gedämpftes Signal {#sec-OscGedämpftesSignal}
Wird kein Verstärker verwendet oder die Verstärkung ist zu klein, würde der Oszillator nicht von selbst starten. Wird die Schwingung zum Beispiel mit einem Puls gestartet würde die Schwingung abklingen. Das Signal wird kleiner. Die Schleifenverstärkung, Schwingkreis und Verstärker, muss so gewählt werden, dass die die Gesamtverstärkung an der Eigenfrequenz 1 ist. Das bedeutet, dass die Verstärkung des Verstärkers gleich der Dämpfung des Schwingkreises sein muss.

#### Instabiles System {#sec-OscInstabilesSystem}
Ist die Verstärkung zu groß schwingt das System auf. Das Signal wird größer und größer. Das System ist instabil. Das bedeutet, dass die Schleifenverstärkung, Schwingkreis und Verstärker, kleiner als 1 bei der Eigenfrequenz ist. 

#### Closed Loop Betrachtung
Wird nun der Kreis geschlossen, siehe @fig-OscBlockschaltbildOszillator, das Ausgangssignal wird am Eingang zurückgeführt, kann eine dauerhafte Schwingung aufrecht erhalten werden. Voraussetzung dafür ist, dass die Verstärkung des Verstärkers richtig gewählt wird.

```{python}
#| code-fold: true
#| echo: false

G = MySymbol('G')

G_eq1 = Eq(G,H/(1-H))
QBookHelpers.print_equation(G_eq1)

G_eq2 = Eq(G,simplify(H_eq2.rhs/(TransferFunction(1,1,s)-H_eq2.rhs)))
#QBookHelpers.print_equation(G_eq2,label=f'eq_OscG')

```


:::{ .content-hidden unless-format="html"}
:::{#fig-OscLsimClosedLoopStable}
```{python}
#| code-fold: true
#| echo: false

#Insert Values
k_OPV.value = 3
QBookHelpers.print_values([k_OPV])
G_eq2_vals = QBookHelpers.replace_num_value(simplify(G_eq2))

#To scipy
sciTF = QBookHelpers.symTF_to_sciTF(G_eq2_vals.rhs)
#print(pole_zero_numerical_data(H_eq2_vals.rhs))
#print(pole_zero_numerical_data(G_eq2_vals.rhs))
t=np.arange(0*10**-6,10*10**-3,10**-6)
u=np.zeros(len(t))
u[0]=1500
t,y,x = signal.lsim(sciTF,U=u,T=t)
#t,y = signal.step(sciTF,T=np.arange(100*10**-6,250*10**-6,10**-9))#
QBookHelpers.plotly_plot(t,y,xtickformat = ".3s",yticksuffix=' V',xtitle_text='Time in s',ytitle_text='Output Voltage',yrange=[-15,15])

```
Zeitlicher Verlauf am Ausgang des Oszillators im stabilen Zustand @sec-OscStableSignal
:::
:::


:::{ .content-hidden unless-format="html"}
:::{#fig-OscLsimClosedLoopUnStable}
```{python}
#| code-fold: true
#| echo: false

#Insert Values
k_OPV.value = 3.1
QBookHelpers.print_values([k_OPV])
G_eq2_vals = QBookHelpers.replace_num_value(simplify(G_eq2))

#To scipy
sciTF = QBookHelpers.symTF_to_sciTF(G_eq2_vals.rhs)
#print(pole_zero_numerical_data(H_eq2_vals.rhs))
#print(pole_zero_numerical_data(G_eq2_vals.rhs))
t=np.arange(0*10**-6,10*10**-3,10**-6)
u=np.zeros(len(t))
u[0]=15
t,y,x = signal.lsim(sciTF,U=u,T=t)
#t,y = signal.step(sciTF,T=np.arange(100*10**-6,250*10**-6,10**-9))#
QBookHelpers.plotly_plot(t,y,xtickformat = ".3s",yticksuffix=' V',xtitle_text='Time in s',ytitle_text='Output Voltage',yrange=[-15,15])

```
Zeitlicher Verlauf am Ausgang des Oszillators im instabilen Zustand @sec-OscInstabilesSystem
:::
:::


:::{ .content-hidden unless-format="html"}
:::{#fig-OscLsimClosedLoopDamped}
```{python}
#| code-fold: true
#| echo: false

#Insert Values
k_OPV.value = 2.9
QBookHelpers.print_values([k_OPV])
G_eq2_vals = QBookHelpers.replace_num_value(simplify(G_eq2))

#To scipy
sciTF = QBookHelpers.symTF_to_sciTF(G_eq2_vals.rhs)
#print(pole_zero_numerical_data(H_eq2_vals.rhs))
#print(pole_zero_numerical_data(G_eq2_vals.rhs))
t=np.arange(0*10**-6,10*10**-3,10**-6)
u=np.zeros(len(t))
u[0]=1500
t,y,x = signal.lsim(sciTF,U=u,T=t)
#t,y = signal.step(sciTF,T=np.arange(100*10**-6,250*10**-6,10**-9))#
QBookHelpers.plotly_plot(t,y,xtickformat = ".3s",yticksuffix=' V',xtitle_text='Time in s',ytitle_text='Output Voltage',yrange=[-15,15])

```
Zeitlicher Verlauf am Ausgang des Oszillators im gedämpften Zustand @sec-OscGedämpftesSignal
:::
:::

#### Anschwingvorgang {#sec-OscAnschwingen}
Es braucht eine "Störung" um das System erstmalig in Schwingung zu versetzten. Dies kann Entweder durch anlegen eines kurzen Impulses geschehen oder in dem die Störungen im System verstärkt werden.  
Erstere Lösung würde einen zusätzlichen Aufwand bedeuten und nur funktionieren wenn das System stabil ist, das bedeutet, die Bauteile exakt eingestellt sind. Das ist alleine aufgrund der Temperaturabhängigkeit der Bauteile nicht möglich.  
Zweitere Lösung bedeutet, dass kleine Signale im System verstärkt werden bis es schwingt. Es muss also mit Absicht ein instabiles System erzeugt werden. Die Schwingung soll aber eine bestimmte Amplitude nicht überschreiten. Das würde wiederum ein stabiles System erfordern. Um dies zu erreichen benötigt es eine **Amplitudenregelung**. Diese ist ohnehin notwendig um die Bauteiltoleranzen und Temperaturabhängigkeiten auszugleichen. Daher ist die zweite Lösung die praktikablere.

### Praktische Umsetzung
Nun soll das theoretische Wissen mit einer Konkreten Schaltung umgesetzt werden.

#### Der Schwingkreis
Der wurde bereits in @sec-OscSchwingkreis berechnet und überprüft. Es folgte die Erkenntnisse, dass die Amplitude bei der Eigenfrequenz um den Faktor 3 gedämpft ist. Daraus folgt der nächste Schritt. Die Dimensionierung eines Verstärkers um die Schleifenverstärkung auf 1 zu bringen.

#### Der Verstärker
Die theoretischen Hintergründe wurden in @sec-OscRückkopplung behandelt. Da die Verstärkung größer als 1 sein muss, keine Phasendrehung gewünscht ist und eine hohe Eingangsimpedanz hilfreich ist, wird eine Nicht-Invertierende Operationsverstärkerschaltung verwendet.

![Open Loop Schaltung](Oszillator/OpenLoop.png){#fig-OscOpenLoopSchaltung  }  

![Open Loop AC Analysis](Oszillator/RCOpenLoopBode.png){#fig-OscOpenLoopSimulation  } 

| Wave Name             | X       | Y         |
| --------------------- | ------- | --------- |
| MAG(v(uout)/v(uin))   | 1,5755 kHz | 999,69 m   |
| PHASE(v(uout)/v(uin)) | 1,5755 kHz | -8,8818 f° |
: Simulations Ergebnisse für den Schwingkreis mit Verstärker an der Eigenfrequenz $\omega_0$. {#tbl-OscACAnalysisOpenLoop}


Die Ergebnisse der Schaltung sind identisch mit den Berechnungen aus @sec-OscStableSignal. Die Verstärkung ist 1 und die Phasenverschiebung ist 0 bei der Eigenfrequenz. Der Verstärker wurde richtig dimensioniert.  
Die Eigenfrequenz hat sich jedoch leicht verschoben. Dies ließe sich durch anpassen der Bauteile im Schwingkreis korrigieren, soll an dieser Stelle aber vernachlässigt werden.

#### Closed Loop Schaltung
Die Schaltung wird nun geschlossen. Das Ausgangssignal wird am Eingang zurückgeführt. Damit ist eine dauerhafte Schwingung möglich. Es gilt die Stabilität zu überprüfen. Dies lässt sich gut mit einer Transienten Simulation zeigen.

![Closed Loop Schaltung](Oszillator/ClosedLoop.png){#fig-OscClosedLoopSchaltung}


![Closed Loop Transienten Analyse im Stabilen Zustand $R_{v2}=2 \ \mathrm{k \Omega} \ R_{v1}=1 \ \mathrm{k \Omega}$ ](Oszillator/RCClosedLoopTransStable.png){#fig-OscClosedLoopSimulationStable}

In @fig-OscClosedLoopSimulationStable ist zu erkennen, dass im stabilen Zustand das System nicht zu schwingen beginnt. Wie in @sec-OscAnschwingen beschrieben benötigt es eine Störung um das System in Schwingung zu versetzen. Alternativ dazu kann das System Instabil gemacht werden in dem die Verstärkung erhöht wird. Dann werden kleinste Störungen in der Schaltung, welche es immer gibt, verstärkt und das System schwingt @fig-OscClosedLoopSimulationInstable.

![Closed Loop Transienten Analyse im Instabilen Zustand $R_{v2}=2.2 \ \mathrm{k \Omega} \ R_{v1}=1 \ \mathrm{k \Omega}$ ](Oszillator/RCClosedLoopTransInst.png){#fig-OscClosedLoopSimulationInstable  }

Der Nachteil des Instabilen Systems ist es, dass die Schwingung immer größer wird. Das System wird übersteuert und dadurch stark verzerrt. Daher muss die Verstärkung so gewählt werden, dass das System stabil ist. Das bedeutet, dass die Schleifenverstärkung, Schwingkreis und Verstärker, an der Eigenfrequenz 1 ist. Das System schwingt dann mit einer konstanten Amplitude

Daraus folgt, dass es einen Verstärker bedarf der seine Verstärkung ändern kann. Das ist eine **Amplitudenregelung**. Diese ist ohnehin notwendig um die Bauteiltoleranzen und Temperaturabhängigkeiten auszugleichen.

#### Amplitudenregelung
In der obigen, theoretische Erklärung, wird angenommen, dass die Verstärkung exakt eingestellt werden kann. In der Praxis ist das aufgrund der Bauteiltoleranzen und der Temperaturabhängigkeit der Bauteile nicht möglich. Es wird daher unweigerlich zu einer gedämpften oder instabilen Schwingung kommen.  
Es braucht daher eine Amplitudenregelung. Damit kann auch das Anschwingen realisiert werden, siehe @sec-OscAnschwingen.  
Es braucht also einen einstellbaren Verstärker. Das lässt sich realisieren indem einer der beiden Widerstände veränderbar gemacht wird. Da sich die Amplitude jedoch selbst regeln muss, und nicht von Hand nachgestellt werden soll und kann, wird eine elektronisch veränderbarer Widerstand benötigt. 

#### Elektronisch veränderbarer Widerstand - VCR
Ein elektronisch veränderbarer Widerstand, englisch Voltage Controlled Resistor, kurz VCR, ist ein Widerstand, dessen Widerstandswert durch eine Spannung verändert werden kann. Eine einfache Bauform lässt sich mit einem JFET realisieren. Der Widerstandswert eines JFETs ist proportional zur Gate-Source Spannung.  
Folgende Überlegungen sind anzustellen.
* Wird besser der Widerstand $R_{v1}$ oder $R_{v2}$ verändert?
* Welcher JFET Typ ist geeignet? N-Kanal oder P-Kanal?
  
Der Regler soll die Verstärkung kleiner machen wenn die Amplitude der Ausgangsspannung zu groß wird und die Verstärkung erhöhen wenn die Amplitude der Ausgangsspannung zu klein ist. Es ist also ein indirekt-proportionaler Zusammenhang zwischen der Amplitude und der Verstärkung. Daraus folgt, dass der Widerstand $R_{v1}$ verändert werden soll, da er in der Formel für die Verstärkung im Nenner steht.
$$V=1+\frac{R_{v2}}{R_{v1}}$$  

Da das Ausgangssignal des Oszillators eine Sinuswelle ist, ist der JFET Typ egal. Es kann sowohl ein N-Kanal als auch ein P-Kanal JFET verwendet werden. Da sich sowohl die negative Steuerspannung für den N-Kanal JFET als auch die positive Steuerspannung für den P-Kanal JFET mit einem einfachen Gleichrichter realisieren lässt. Um die Bauteile der Amplitudenregelung bestimmen zu können, muss der Arbeitspunkt des VCR's bestimmt werden. Dazu wird eine DC-Sweep Analyse durchgeführt. Die Widerstände $R_{stab3}$ und $R_{stab4}$ dienen der Linearisierung des JFETs. Der Widerstand $R_{s2}$ dient als Shuntwiderstand zur Messung des Stromes.

![VCR](Oszillator/PKanalVCR.png){#fig-OscVCR}

![VCR DC-Sweep](Oszillator/VCRDCSweep.png){#fig-OscVCRDCSweep}

Der Arbeitspunkt muss möglichst mittig in einem linearen Teilstück des JFET liegen. Eine Steuerspannung zwischen 3 und 5 Volt ist ideal. Um diese Spannung $U_{st}$ aus dem Ausgangssignal $U_{out}$ zu gewinnen, wird ein Spannungsteiler, realisiert mit einem Potentiometer, und ein Einweggleichrichter verwendet.  
Der Widerstandswert des JFETs zwischen Drain und Source ist dann ca. $r_{DS}= 200 \ \Omega$. Dieser Wert wird nun vom oben eingebauten $R_{v1}$ abgezogen. Der neue Widerstand $R_{v11}$ wird also so dimensioniert, dass der Widerstand der Drain-Source Strecke und des Widerstandes $R_{v11}$ zusammen den  Widerstandswert von $R_{v1}$ ergeben.


#### Die Oszillatorschaltung

![Oszillatorschaltung](Oszillator/OszillatorPKanal.png){#fig-OscSchaltung}

:::{ .content-hidden unless-format="html"}
:::{#fig-OscACAnalysisPKanal}
```{python}
#| code-fold: true
#| echo: false

filepath = 'Oszillator/Transient AnalysisPKanal.csv'
thing_to_plot = {'v(uout)':[1], 'v(ust)':[2]}

QBookHelpers.trans_plot_matplotlib(filepath, thing_to_plot)


```
Simulation der Ausgangsspannung und der Steuerspannung für den Oszillator
:::
:::

Es ist zu sehen, dass nach einer Einschwingphase die Amplitude der Ausgangsspannung konstant bleibt. Die Amplitudenregelung funktioniert. Der Oszillator funktioniert.  


Um eine Aussage über die Qualität zu machen muss die Verzerrung des Signals betrachtet werden. Dazu wird das Signal in seine Fourierkoeffizienten zerlegt und die Oberwellen berechnet. Die Oberwellen dürfen nicht zu groß sein.  

Es wurde ein einfacher, funktionsfähiger Oszillator dimensioniert. Es gibt jedoch noch viele Möglichkeiten zur Verbesserung.

## Aufgabenstellung
Hier werden einige Ideen für die Aufgabenstellung gegeben.  

### Dimensionierung Schwingkreis
Dimensionieren Sie ein Wien-Robinson Glied für Ihren Oszillator.   
	1. Leiten Sie die Gleichungen für die Eigenfrequenz her und berechnen Sie die Bauteilwerte. Verwenden Sie Werte aus entsprechenden Normreihen.  
	2. Überprüfen Sie Ihre Berechnungen mittels Simulation.  
	3. Geben Sie an wie groß die Verstärkung eines nachgeschaltenen Verstärkers sein muss, damit die Amplitude am Eingang des Schwingkreises gleich groß ist wie die Amplitude nach dem Verstärker.  
	4. Machen Sie einen Vorschlag für eine passende Verstärkerschaltung.  

### Dimensionierung Verstärker  
Dimensionieren Sie einen Verstärker so, dass  die Amplitude am Eingang des Schwingkreises gleich groß ist wie die Amplitude nach dem Verstärker bei der Resonanzfrequenz.  
Überprüfen Sie Ihre Berechnung und machen Sie eine klare Aussage.  

### Rückkopplung  
Implementieren Sie die Rückkopplung wie im Skriptum gezeigt.  
Betrachten Sie das Ausgangssignal  
	- Welches Ergebnis erwarten Sie?  
	- Welches Ergebnis haben Sie?  
	- Erklären Sie die Abweichung.  
Welche Ideen haben Sie um das erwartete Ergebnis zu erhalten?  

### Amplitudenregelung  
**Warum Amplitudenregelung**  
Geben Sie kurz an warum eine Amplitudenregelung notwendig ist.  

**Setzen Sie die Amplitudenregelung um**  
Wählen Sie aus folgenden zwei Methoden:  
	a. Mittels Hilfe des Buches E. Böhmer WO D. Ehrhardt Elemente der angewandten Elektronik. Kapitel 13.2.   
	b. Mit dem im Unterricht aufgezeigten Weg  

**Erklären der Schaltung**    
Versuchen Sie die Schaltung in einzelne Teilschaltungen einzuteilen und erklären Sie die Schaltung.   
Versuchen Sie es so zu erklären wie Sie es gerne erklärt haben würden.  
Testen Sie Ihre Erklärung wechselseitig im Team.  
Achten Sie darauf, dass Ihre Erklärung gängige Normen und Standards einhält.  

### Ideen für den Einser
Ideen für den Nachweis der Eigenständigkeit:  
	• Verwenden Sie ein alternatives Frequenzbestimmendes Glied  
	• Setzten Sie die Amplitudenregelung alternativ um  
	• Nehmen Sie eine Schaltung aus der Literatur und erklären Sie die Vor- und Nachteile zu der im Unterricht entwickelten Schaltung.  
	• …  
	

